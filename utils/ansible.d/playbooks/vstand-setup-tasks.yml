---
# Настройка vbox-машины под конкретный проект
# --------------------------------------------------------------------
- name: use config file for stand
  debug: msg="{{ daas_vstand_config }}"

- name: use project file
  debug: msg="{{ daas_project_config }}"

- name: use project name
  debug: msg="{{ project.name }}"

- name: install programs
  apt_rpm: "package={{item}} state=present"
  with_items:
    - mc
    - wget 
    - htop
    - curl
    - eepm
    - apt-repo
    - docker-ce
    - python-module-docker
    - python-module-pip
    - python-module-jinja2
    - cgroup 
    - iptables
    - git-core
    - etersoft-build-utils
    - etcgit
    - su
  tags: 
    - install

- name: control su
  shell: control su public

- name: install docker-compose
  pip: name=docker-compose
  tags: 
    - install

- name: "add {{ daas_vstand.user }} to group 'docker'"
  user:
    name: "{{ daas_vstand.user }}"
    groups: docker
    append: yes
  tags: 
    - user-setup

- name: "set TERM environment variable"
  become: no
  shell: |
      if ! grep -q 'TERM=' /home/{{daas_vstand.user}}/.bashrc; then 
          echo 'export TERM=xterm' >>  /home/{{daas_vstand.user}}/.bashrc;
      fi
  tags: 
    - user-setup

- name: "create rpmmacros for {{ daas_vstand.user }}"
  become: no
  template: "src={{daas_ansible_dir}}/templates/rpmmacros.tpl dest=/home/{{daas_vstand.user}}/.rpmmacros"
  tags: 
    - user-setup

- name: install daas from package
  apt_rpm: "package={{item}} state=present"
  when: daas_vstand.daas_url is undefined
  tags: 
    - daas
    - install

- name: check local daas file
  local_action: stat path="{{daas_vstand.daas_url}}"
  register: daas_rpm
  when: daas_vstand.daas_url is defined
  tags: 
    - daas
    - install

- name: copy daas from local file
  copy:
    src: "{{daas_vstand.daas_url}}"
    dest: "/tmp/"
  when: daas_vstand.daas_url is defined and daas_rpm.stat.exists == true
  tags: 
    - daas
    - install

- name: load daas from url
  get_url:
    url: "{{daas_vstand.daas_url}}"
    dest: /tmp/
  when: daas_vstand.daas_url is defined and daas_rpm.stat.exists == false
  tags: 
    - daas
    - install

- name: "install daas from local rpm"
  shell: "rpm -qa | grep -q daas || sudo epmi --auto /tmp/daas*.rpm"
  when: daas_vstand.daas_url is defined
  tags: 
    - daas
    - install

- name: "remove daas local rpm"
  shell: rm -rf /tmp/daas*.rpm
  when: daas_vstand.daas_url is defined
  tags: 
    - daas
    - install

- name: check local gitlab-runner file
  local_action: stat path="{{daas_vstand.gitlab.runner_download_url}}"
  register: grunner_file
  tags:
    - gitlab

- name: copy gitlab-runner from local file
  copy:
    dest: /usr/local/bin/gitlab-runner
    src: "{{daas_vstand.gitlab.runner_download_url}}"
    mode: 'a+x'
  when: daas_vstand.gitlab.runner_download_url is defined and grunner_file.stat.exists == true
  tags:
    - gitlab

- name: download gitlab-runner from url
  get_url:
    url: "{{daas_vstand.gitlab.runner_download_url}}"
    dest: /usr/local/bin/gitlab-runner
    mode: 'a+x'
  when: daas_vstand.gitlab.runner_download_url is defined and grunner_file.stat.exists == false
  tags: 
    - gitlab

- name: create gitlab-runner service file
  template: "src={{daas_ansible_dir}}/templates/gitlab-runner.service.tpl dest=/etc/systemd/system/gitlab-runner.service owner=root"
  tags: 
    - gitlab

- name: List configured runners
  become: no
  command: gitlab-runner list --config '/home/{{daas_vstand.user}}/.gitlab-runner/config.toml'
  register: configured_runners
  changed_when: False
  tags: 
    - gitlab

- name: Register runners to GitLab
  become: no
  command: gitlab-runner register >
    --config '/home/{{daas_vstand.user}}/.gitlab-runner/config.toml'
    --non-interactive
    --url '{{ daas_vstand.gitlab.url }}'
    --registration-token '{{ daas_vstand.gitlab.runner_registration_token }}'
    --description '{{ item.runner.description }}'
    --tag-list '{{ item.runner.tags if item.runner.tags is defined else '' }}'
    --executor '{{ item.runner.executor }}'
    --docker-image '{{ item.runner.docker_image if item.runner.docker_image is defined else '' }}'
    --env 'TERM=xterm'
    {{ item.runner.extra_options if item.runner.extra_options is defined else '' }}
  when: "item.runner.description is defined and configured_runners.stderr.find('\n{{ item.runner.description }}') == -1" 
  with_items: "{{daas_vstand.gitlab.runners}}"
  tags: 
    - gitlab

- name: Start gitlab-runner service
  service: name=gitlab-runner state=started enabled=yes
  tags: 
    - gitlab
