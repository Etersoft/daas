# Создание виртуального стенда (vbox машины)
# --------------------------------------------------------------------
- hosts: all
  become: no
  gather_facts: no 
  vars_files:
     - "{{ daas_vars_files }}"
     - "{{ daas_project_file }}"

  vars:
    ansible_ssh_user: "{{vstand.host.user}}"
    ansible_ssh_password: "{{vstand.host.pass}}"
    tmp_boxdir: /srv/vbox
    vagrant_boxes_dir: /srv/vbox/boxes
    project_dir: "vstands/vs-{{project.name}}"

  pre_tasks:
     - name: 'set password for ssh user'
       set_fact: ansible_ssh_pass="{{ vstand.host.pass }}"
       tags: tt

  tasks:
    - name: use config file for stand
      debug: msg="{{ daas_vars_files }}"

    - name: use project file
      debug: msg="{{ daas_project_file }}"

    - name: use project name
      debug: msg="{{ project.name }}"

    - name: use project dir
      debug: msg="{{ project_dir }}"

    - name: Create project directory
      file: "path={{project_dir}} state=directory mode=0777"

    - name: Generate vagrant file
      template: "src={{daas_ansible_dir}}/templates/Vagrantfile.tpl dest={{project_dir}}/Vagrantfile"
      tags: tt

    - name: Generate bootstrap file
      template: "src={{daas_ansible_dir}}/templates/bootstrap.sh.tpl dest={{project_dir}}/bootstrap.sh mode='a+x'"
    
    - name: Copy vagrant box
      copy:
        dest: "{{ vagrant_boxes_dir }}/{{vstand.vagrant.box.name}}.box"
        src: "{{vstand.vagrant.box.url}}"

    - name: Create vagrant boxes (Very very long task)
      shell: |
          if ! vagrant box list | grep -q '{{vstand.vagrant.box.name}}'; then
             vagrant box add {%- if vstand.vagrant.box.add_args is defined %}{{vstand.vagrant.box.add_args}}{%- endif %} {{vstand.vagrant.box.name}} {{ vagrant_boxes_dir }}/{{vstand.vagrant.box.name}}.box 1>/dev/null
             exit $?
          fi
          exit 0

    - name: run new vstand
      shell: vagrant up
      args:
          chdir: "{{project_dir}}/"
      tags: tt

    - name: get ip from new stand
      shell: |
          IP=$( vagrant ssh -c 'ip addr list eth1 | grep "  inet " | head -n 1 | cut -d " " -f 6 | cut -d / -f 1' )
          echo "IP: $IP"
      args:
          chdir: "{{project_dir}}/"
      register: newstand
      tags: tt

    - name: 'set variable ip'
      set_fact: 
        newstand_ip: "{{ newstand.stdout | regex_replace('\n','') | regex_replace(regexp,'\\2')  }}"
      vars:
        regexp: '(.*)IP: (.*)$'
      tags: tt

    - name: 'set ip'
      debug: msg="{{ newstand_ip }}"
      tags: tt

    - name: 'setup admin for new stand'
      shell: vagrant ssh -c "sudo useradd {{project.vstand.user}}; echo '{{project.vstand.user}}:{{project.vstand.pass}}' | sudo chpasswd"
      args:
        chdir: "{{project_dir}}/"      
      tags: tt

    - name: "add admin to group 'wheel'"
      shell: vagrant ssh -c "sudo usermod -a -G wheel {{project.vstand.user}}"
      args:
        chdir: "{{project_dir}}/"      
      tags: tt

    - name: save ip file information
      local_action: copy content="{{ item }}" dest="{{ daas_newstand_ip_file }}" 
      with_items: 
        - "{{newstand_ip}}"
      tags: tt