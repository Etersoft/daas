# Создание виртуального стенда (vbox машины)
# --------------------------------------------------------------------
- hosts: all
  become: no
  gather_facts: no
  vars_files:
     - "{{ daas_vstand_config }}"
     - "{{ daas_project_config }}"
     - "{{daas_ansible_dir}}/daas-defaults.yml"
     # обязательно должен быть последним (т.к. переопределяет свойства проекта и умолчательные настройки)
     - "{{daas_ansible_dir}}/daas-vstand-config.yml"

  vars:
    ansible_ssh_user: "{{daas_vstand.hostmachine.user}}"
    ansible_ssh_password: "{{daas_vstand.hostmachine.pass}}"
    tmp_boxdir: /srv/vbox
    vagrant_boxes_dir: /srv/vbox/boxes
    vagrant_project_dir: "vstands/vs-{{project.name}}-{{daas_vstand.hostname}}"

  pre_tasks:
    - name: use config file for stand
      debug: msg="{{ daas_vstand_config }}"
      tags:
        - always

    - name: use project file
      debug: msg="{{ daas_project_config }}"
      tags:
        - always

    - name: use project name
      debug: msg="{{ project.name }}"
      tags:
        - always

    - name: use project dir
      debug: msg="{{ vagrant_project_dir }}"
      tags:
        - always

    - name: 'setup password for ssh user'
      set_fact: ansible_ssh_pass="{{ daas_vstand.hostmachine.pass }}"
      tags:
        - always

  tasks:
    - name: Create project directory
      file: "path={{vagrant_project_dir}} state=directory mode=0777"
      tags:
        - env
        - vagrant

    - name: Generate vagrant file
      template: "src={{daas_ansible_dir}}/templates/Vagrantfile.tpl dest={{vagrant_project_dir}}/Vagrantfile"
      tags:
        - vagrant

    - name: Generate bootstrap file
      template: "src={{daas_ansible_dir}}/templates/bootstrap.sh.tpl dest={{vagrant_project_dir}}/bootstrap.sh mode='a+x'"
      tags:
        - vagrant

    - name: check vagrant box file
      local_action: stat path="{{daas_vstand.vagrant.box.url}}"
      register: vagrant_box_file
      tags:
        - vagrant

    - name: Copy vagrant box
      copy:
        dest: "{{ vagrant_boxes_dir }}/{{daas_vstand.vagrant.box.name}}.box"
        src: "{{daas_vstand.vagrant.box.url}}"
      when: vagrant_box_file.stat.exists == true
      tags:
        - vagrant

    - name: Create vagrant boxes (Very very long task)
      shell: |
          if ! vagrant box list | grep -q '{{daas_vstand.vagrant.box.name if daas_vstand.vagrant.box.name|length>0 else daas_vstand.vagrant.box.url}}'; then
             if test -n "{{ '1' if vagrant_box_file.stat.exists == true else '' }}"; then
                 vagrant box add {%- if daas_vstand.vagrant.box.add_args|length>0 %}{{daas_vstand.vagrant.box.add_args}}{%- endif %} --name {{daas_vstand.vagrant.box.name}} {{ vagrant_boxes_dir }}/{{daas_vstand.vagrant.box.name}}.box 1>/dev/null
             else
                 vagrant box add {%- if daas_vstand.vagrant.box.add_args|length>0 %}{{daas_vstand.vagrant.box.add_args}}{%- endif %} {{daas_vstand.vagrant.box.url}}
             fi
             exit $?
          fi
          exit 0
      tags:
        - vagrant

    - name: run new vstand
      shell: vagrant up
      args:
          chdir: "{{vagrant_project_dir}}/"
      tags:
        - stand

    - name: get ip from new stand
      shell: |
          IP=$( vagrant ssh -c 'ip addr list eth1 | grep "  inet " | head -n 1 | cut -d " " -f 6 | cut -d / -f 1' )
          echo "IP: $IP"
      args:
          chdir: "{{vagrant_project_dir}}/"
      register: newstand
      tags:
        - stand

    - name: 'set variable ip'
      set_fact:
        newstand_ip: "{{ newstand.stdout | regex_replace('\n','') | regex_replace(regexp,'\\2')  }}"
      vars:
        regexp: '(.*)IP: (.*)$'
      tags:
        - stand

    - name: 'set ip'
      debug: msg="{{ newstand_ip }}"
      tags:
        - stand

    - name: 'setup admin for new stand'
      shell: vagrant ssh -c "sudo useradd {{daas_vstand.user}}; echo '{{daas_vstand.user}}:{{daas_vstand.pass}}' | sudo chpasswd"
      args:
        chdir: "{{vagrant_project_dir}}/"
      tags:
        - stand

    - name: "add admin to group 'wheel'"
      shell: vagrant ssh -c "sudo usermod -a -G wheel {{daas_vstand.user}}"
      args:
        chdir: "{{vagrant_project_dir}}/"
      tags:
        - stand

    - name: save ip file information
      local_action: copy content="{{ item }}" dest="{{ daas_newstand_ip_file }}"
      with_items:
        - "{{newstand_ip}}"
      tags:
        - stand
