project:
  name: "myproject"
  rpmdir: "myproject"
  pkgname: "myproject"
  networks:
      # это не ip, это подсеть. Конкретный ip назначается у конкретного узла (см. ниже)
      net1: "192.168.81"
      net2: "192.168.82"
      
      #net3: "192.168.83"
      #...
  
  image:
    controller: x64.p8-controller
    gui: x64.p8-gui
    builder: x64.p8-builder
    tester: x64.p8-tester

  # global volumes
  volumes:
       - /var/run/docker.sock:/var/run/docker.sock

  # global devices
  devices:
       - /rmp/dev1:/tmp/dev1

  # global apt parameters
  apt:
    packages:
      - mc
      - libuniset2
  
  # global start command for container
  start_command: "start-project.sh"

  # global 'copy' list
  copy:
    - '[a+r]testfile.copy:/tmp/testfile'
    - '[a+rw]testfile2.copy:/tmp/'
  
  builder:
    ip: 100
    volumes:
       - /cache
       
  tester:
    ip: 101
    start_command: "start-tester.sh"
    env_file:
       - ./data/tester.env 
    volumes:
       - /cache
       - source:/source
    apt:
      sources:
        - "rpm file://xxx"
        - "rpm file://xxx"
        - "rpm file://xxx"
      packages:
        - mc
        - libuniset2
    
  controllers:
    # apt parameters for type 'controller'
    apt:
      sources:
        - "rpm file://controller/xxx"
      packages:
        - openssh

    nodes:
      tnode1: 
        ip: 3
        # apt parameters only for 'tnode1'
        apt:
          packages:
            - openssh-server
        # devices only for 'tnode1'
        devices:
            - /mydir/dev2:/tmp/dev2

        # volumes only for 'tnode1'
        volumes:
            - /mydir/tnode1:/tmp/tnode1

      tnode2: { ip: 4 }
      tnode3: { ip: 5 }
      tnode4: { ip: 6 }

  gui:
    nodes:
      gui1: { ip: 1, vnc_host: gui1, vnc_port: 5901, novnc_port: 6081 }
      gui2: { ip: 2, vnc_host: gui2, vnc_port: 5902, novnc_port: 6082 }

