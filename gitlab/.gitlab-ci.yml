variables:
  BASE_IMAGE_NAME: "theatre-builder-p8"
  LOC_REGISTRY: "my-local-registry:5000"
  TEST_IMAGE_NAME: "${LOC_REGISTRY}/${CI_PROJECT_NAME}-${CI_COMMIT_REF_NAME}"
  HOME_BUILDER: "/home/builder"
  # CI_DEBUG_TRACE: "true"
  ARTIFACTS_PATH: "artifacts"
  
stages:
  - init
  - build
  - test
  - release
  - deploy
  - cleanup

prepare_containers:
  stage: init
  script:
    - echo "Start docker-containers for compile sources"
    - cat docker/builder.Dockerfile.tpl | sed "s|#BASE_IMAGE#|${BASE_IMAGE_NAME}|g;" > Dockerfile
    - sudo docker build --force-rm -t ${TEST_IMAGE_NAME} -f Dockerfile .
    - sudo docker push ${TEST_IMAGE_NAME}
  tags:
    - builder-p8
  only:
    - develop

build package:
  stage: build
  image: ${TEST_IMAGE_NAME}
  script:
    - rpmbb
    - mkdir -p ${ARTIFACTS_PATH}
    - cp $HOME/RPM/RPMS/x86_64/*.rpm ${ARTIFACTS_PATH}/
    - cp $HOME/RPM/log/*.log ${ARTIFACTS_PATH}/
    - ls -a ${ARTIFACTS_PATH}/
  tags:
    - docker-builder-p8
  only:
    - develop
  artifacts:
    paths:
      - ${ARTIFACTS_PATH}/*
    when: on_success
    expire_in: 1h
    
testing:
  stage: test
  script:
    - echo "Testing"
    - ls ${ARTIFACTS_PATH}/
  tags:
    - docker-builder-p8
  only:
    - develop

release-image:
  stage: release
  script:
    - echo "Build docker-image with sources"

deploy-to-review:
  stage: deploy
  script:
    - echo "Deploy docker-image with sources to rewiew"
  tags:
    - docker-builder-p8
  only:
    - develop

deploy-to-prod:
  stage: deploy
  script:
    - echo "Deploy docker-image with sources to production"
  when: manual
  tags:
    - docker-builder-p8
  only:
    - develop

cleanup:
  stage: cleanup
  when: always
  script:
    - echo "Stop & remove containers"
    # ls для отладки
    - sudo docker image ls
    # - sudo docker stop ${TEST_IMAGE_NAME}
    - sudo docker image rm ${TEST_IMAGE_NAME}
  tags:
    - builder-p8
  only:
    - develop
